openapi: 3.0.3
info:
  title: Cats API
  version: 1.0.0
  description: simple API for sorting cats by breed
paths:
  /api/breeds/:
    get:
      operationId: breeds_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - breeds
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBreedList'
          description: ''
  /api/breeds/{id}/cats/:
    get:
      operationId: breeds_cats_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - breeds
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCatList'
          description: ''
  /api/cats/:
    get:
      operationId: cats_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - cats
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCatList'
          description: ''
    post:
      operationId: cats_create
      tags:
      - cats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cat'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: ''
  /api/cats/{id}/:
    get:
      operationId: cats_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - cats
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: ''
    put:
      operationId: cats_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - cats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cat'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: ''
    patch:
      operationId: cats_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - cats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCat'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: ''
    delete:
      operationId: cats_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - cats
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    Breed:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        description:
          type: string
          maxLength: 500
      required:
      - description
      - id
      - name
    Cat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        grades:
          type: array
          items:
            $ref: '#/components/schemas/Grade'
          readOnly: true
        name:
          type: string
          maxLength: 100
        age:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        description:
          type: string
          nullable: true
          maxLength: 500
        color:
          type: string
          nullable: true
          maxLength: 100
        owner:
          type: integer
        breed:
          type: integer
          nullable: true
      required:
      - age
      - grades
      - id
      - name
      - owner
    Grade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        grade:
          type: integer
          maximum: 5
          minimum: 0
      required:
      - grade
      - id
      - user
    PaginatedBreedList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Breed'
    PaginatedCatList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Cat'
    PatchedCat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        grades:
          type: array
          items:
            $ref: '#/components/schemas/Grade'
          readOnly: true
        name:
          type: string
          maxLength: 100
        age:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        description:
          type: string
          nullable: true
          maxLength: 500
        color:
          type: string
          nullable: true
          maxLength: 100
        owner:
          type: integer
        breed:
          type: integer
          nullable: true
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
